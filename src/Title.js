/*
auto-generated by: https://github.com/react-spring/gltfjsx
*/

import * as THREE from "three";
import React, { useEffect, useRef, useState } from "react";
import { useLoader, useFrame } from "react-three-fiber";
import { GLTFLoader } from "three/examples/jsm/loaders/GLTFLoader";

export default function Model(props) {
  const group = useRef();
  const { nodes, materials, animations } = useLoader(
    GLTFLoader,
    "/game_pieces.glb"
  );

  const [active, setActive] = useState(false);
  useEffect(() => {
    document.body.style.cursor = active ? "pointer" : "default";
    return function cleanup() {
      document.body.style.cursor = "default";
    };
  }, [active]);

  return (
    <group
      ref={group}
      {...props}
      dispose={null}
      onPointerOver={() => setActive(true)}
      onPointerOut={() => setActive(false)}
    >
      <mesh
        material={materials.Red}
        geometry={nodes.TitlePlane.geometry}
        name="TitlePlane"
      />
      <mesh
        material={materials.MaskPlaneMaterial}
        geometry={nodes.MaskPlane.geometry}
        name="MaskPlane"
      />
      <group name="CodeBreaker">
        <mesh
          material={materials.WhiteEmission}
          geometry={nodes.CodeBreaker_0.geometry}
          name="CodeBreaker_0"
        />
        <mesh geometry={nodes.CodeBreaker_0.geometry} name="CodeBreakerMask" />
        <mesh
          material={materials.MaskPlaneMaterial}
          geometry={nodes.CodeBreaker_1.geometry}
          name="CodeBreaker_1"
        />
      </group>
    </group>
  );
}
